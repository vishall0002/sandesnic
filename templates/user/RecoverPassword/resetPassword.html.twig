{% extends 'user/Login/master.html.twig' %}
{% block css %}
    {{ parent() }}
{% endblock %}
{% block mastercontent %}
    {% trans_default_domain 'general' %}
    <div class="col-md-10 col-md-offset-1">
        <div class="box box-primary recoverPass">
            <div class="box-header">
                <h3 class="box-title">{{ 'reset_password.labels.heading'|trans({}) }}</h3>
            </div>
            <div class="box-body with-border">
              {{form_start(form)}}
                  <div class="col-md-12">
                      {{ form_row(form.newPassword) }}
                  </div>
                  <div class="col-md-12">
                      {{ form_row(form.confirmPassword) }}
                  </div>
                  <div class="col-md-12 text-center">
                      {{ form_widget(form.update) }}
                      {{ form_widget(form.reset) }}
                  </div>
              {{form_end(form)}}
          </div>
        </div>
    </div>
{% endblock %}
{% block jsInPages %}
    {{parent()}}
    <script defer src="{{ asset('bundles/app/js/sjcl.js') }}" type="text/javascript"></script>
    <script type="text/javascript">
    $('#{{form.update.vars.id}}').click(function(e){
        e.preventDefault();
        if (isFormValid(e)) {
            hashPasswords();
            var data = $('form').serialize();
            var path = $('form').attr('action');
            $.ajax({
                url: path,
                data: data,
                type: 'POST',
                beforeSend: function(e){
                    $('.recoverPass').append('<div class="overlay"><span class="fa fa-refresh fa-spin fa-2x"></span></div>');
                },
                success: function(response){
                    if(response.type === 'success'){
                        addMsg(response.type, response.msg)
                        window.setTimeout(function () {
                            window.location.href = response.redirectPath;
                        }, 1000);
                    }else{
                        addMsg(response.type, response.msg)
                    }
                },
                complete: function(){
                    $('.recoverPass').find('.overlay').remove();
                }
            });
        }
    });

    function validPassword(pwd) {
        var regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[$@$!%*?&])[A-Za-z\d$@$!%*?&]{6,12}/;
        if (regex.test(pwd)) {
            return true;
        } else {
            return false;
        }
    }

    function isFormValid(e) {
        $firstP = $("#{{form.newPassword.vars.id}}");
        $confirmP = $("#{{form.confirmPassword.vars.id}}");
        if ($firstP.val() === '') {
            injectError($firstP, 'Please enter your password');
            return false;
        } else if ($confirmP.val() === '') {
            injectError($confirmP, 'Repeat your password');
            return false;
        } else if ($firstP.val() != $confirmP.val()) {
            $firstP.closest('.form-group').addClass('has-error');
            injectError($confirmP, 'New Password and Repeat Password is mismatching');
            $firstP.val('');
            $confirmP.val('');
        } else if (!validPassword($firstP.val())){
            injectError($confirmP, 'Password strength is not enough, need atleast 6 characters, one uppercase letter, one lowercase character, one digit and a symbol');
            $firstP.val('');
            $confirmP.val('');
        } else {
            return true;
        }
    }

    function injectError($el, msg) {
        msg = msg || 'Please enter your current password !';
        $el.closest('.help-block').remove();
        $el.closest('.form-group').addClass('has-error').append('<span class="help-block">\n\
                        <ul class="list-unstyled"><li><span class="glyphicon glyphicon-exclamation-sign"></span>\n\
                    ' + msg + '</li></ul></span>');
    }

    function hashPasswords() {
        var firstP = $("#{{form.newPassword.vars.id}}");
        var confirmP = $("#{{form.confirmPassword.vars.id}}");
        if (firstP.val() !== "" && confirmP.val() !== '') {
            var baS1 = sjcl.hash.sha256.hash(firstP.val());
            var digestS1 = sjcl.codec.hex.fromBits(baS1);
            var baS2 = sjcl.hash.sha256.hash(confirmP.val());
            var digestS2 = sjcl.codec.hex.fromBits(baS2);
            firstP.val(digestS1);
            confirmP.val(digestS2);
        }
    }
    </script>
{% endblock %}
